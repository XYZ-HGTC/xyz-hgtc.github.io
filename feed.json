{
    "version": "https://jsonfeed.org/version/1",
    "title": "和光探尘录",
    "description": "",
    "home_page_url": "https://xyz-hgtc.github.io",
    "feed_url": "https://xyz-hgtc.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "和光同尘"
    },
    "items": [
        {
            "id": "https://xyz-hgtc.github.io/python-pdf.html",
            "url": "https://xyz-hgtc.github.io/python-pdf.html",
            "title": "Python PDF",
            "summary": "程序目的 使用Python将PDF分割成10页一份的PDF文件并将其交给AI进行处理 ## 第一部分：PDF的分割 使用的库文件 PyPDF2 实现PDF页数分割（12页一份）： from PyPDF2 import PdfWriter, PdfReader def split_pdf(input_file, output_prefix): input_pdf = PdfReader(open(input_file, &quot;rb&quot;)) num_pages&hellip;",
            "content_html": "<h1 id=\"程序目的\">程序目的</h1>\n<p>使用Python将PDF分割成10页一份的PDF文件并将其交给AI进行处理</p><h1 id=\"程序实现\">程序实现</h1>\n<pre><code>## 第一部分：PDF的分割\n</code></pre>\n<p><strong>使用的库文件</strong></p><p><code>PyPDF2</code></p><h2 id=\"代码\">代码</h2>\n<p><strong>实现PDF页数分割（12页一份）：</strong></p><pre><code class=\"language-python\">from PyPDF2 import PdfWriter, PdfReader\n\n\ndef split_pdf(input_file, output_prefix):\n    input_pdf = PdfReader(open(input_file, &quot;rb&quot;))\n    num_pages = len(input_pdf.pages)\n    start_page = 0\n    file_index = 1\n    while start_page &lt; num_pages:\n        end_page = min(start_page + 12, num_pages)\n        output_pdf = PdfWriter()\n        for i in range(start_page, end_page):\n            output_pdf.add_page(input_pdf.pages[i])\n        output_path = f&quot;{output_prefix}_{file_index}.pdf&quot;\n        with open(output_path, &quot;wb&quot;) as output_file:\n            output_pdf.write(output_file)\n        start_page += 12\n        file_index += 1\n    print(&quot;complete&quot;)\n\n\n# 使用示例\nif __name__ == &quot;__main__&quot;:\n    input_file = &quot;C:/Users/XYZ/Desktop/Code/Python PDF/xyz.pdf&quot;  # 请将此替换为实际的输入文件路径\n    output_prefix = &quot;output_file&quot;  # 请将此替换为你想要的输出文件前缀\n    split_pdf(input_file, output_prefix)\n</code></pre>\n<h2 id=\"上传给ai进行分析\">上传给AI进行分析</h2>\n<p><strong>实现方法</strong></p><ol>\n<li>找到免费的大模型API</li>\n<li>使用requests模块进行API的访问，并输出结果</li>\n</ol>\n<p><strong>实现代码</strong></p><p><em>实现对话功能：</em></p><p>所使用模型：Deepseek</p><pre><code class=\"language-python\">import requests\n\n  \n\nuser_input = input(&quot;请输入您的问题：\\n&quot;)\n\n  \n\n# 设置API端点和密钥\n\napi_url = &quot;https://api.deepseek.com/v1/chat/completions&quot;\n\napi_key = &quot; &quot;\n\n  \n\n# 设置请求头\n\nheaders = {\n\n    &quot;Authorization&quot;: f&quot;Bearer {api_key}&quot;,\n\n    &quot;Content-Type&quot;: &quot;application/json&quot;\n\n}\n\n  \n\n# 设置请求体\n\ndata = {\n\n    &quot;model&quot;: &quot;deepseek-chat&quot;,  # 选择模型\n\n    &quot;messages&quot;: [\n\n        {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot;},\n\n        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: user_input}\n\n    ]\n\n}\n\n  \n\n# 发送POST请求\n\nresponse = requests.post(api_url, headers=headers, json=data)\n\n  \n\n# 检查响应状态\n\nif response.status_code == 200:\n\n    # 解析响应内容\n\n    result = response.json()\n\n    print(&quot;DeepSeek回复:\\n&quot;, result[&#39;choices&#39;][0][&#39;message&#39;][&#39;content&#39;])\n\nelse:\n\n    print(&quot;请求失败，状态码:&quot;, response.status_code)\n\n    print(&quot;错误信息:&quot;, response.text)\n</code></pre>\n<p><em>尝试将文件上传上去：</em></p><pre><code class=\"language-python\">import requests\n\n  \n\n# Deepseek API的URL\n\napi_url = &quot;https://api.deepseek.com/v1/analyze&quot;\n\n  \n\n# 你的API密钥\n\napi_key = &quot; &quot;\n\n  \n\n# 要上传的文件路径\n\nfile_path = &quot;path_to_your_file.txt&quot;\n\n  \n\n# 设置请求头\n\nheaders = {\n\n    &quot;Authorization&quot;: f&quot;Bearer {api_key}&quot;,\n\n}\n\n  \n\n# 打开文件并准备上传\n\nwith open(file_path, &quot;rb&quot;) as file:\n\n    files = {&quot;file&quot;: file}\n\n    # 发送POST请求\n\n    response = requests.post(api_url, headers=headers, files=files)\n\n  \n\n# 检查响应状态\n\nif response.status_code == 200:\n\n    # 解析并显示分析结果\n\n    result = response.json()\n\n    print(&quot;Analysis Result:&quot;)\n\n    print(result)\n\nelse:\n\n    print(f&quot;Failed to upload file. Status code: {response.status_code}&quot;)\n\n    print(response.text)\n</code></pre>\n",
            "image": "https://xyz-hgtc.github.io/media/posts/8/OIP-C.jpg",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "程序随笔"
            ],
            "date_published": "2025-01-04T21:09:55+08:00",
            "date_modified": "2025-01-04T21:11:16+08:00"
        },
        {
            "id": "https://xyz-hgtc.github.io/markdownwen-ben-bian-ji-qi-tui-jian.html",
            "url": "https://xyz-hgtc.github.io/markdownwen-ben-bian-ji-qi-tui-jian.html",
            "title": "Markdown文本编辑器",
            "summary": "Markdown文本的用处 在很多的地方都有Markdown文本的涉及，就像网页HTML中常出现的一级标题，二级标题等内容，设计初衷是为了有效的将其转换为XHTML或HTML，但是因为其简洁直观在网络中流行。 Markdown编辑器有很多，坚持一直免费的确很少，下面推荐一些Linux，Windows，Mac平台都可以使用的编辑器以及我使用下来的一些感受。",
            "content_html": "<h1>Markdown文本的用处</h1>\n<p>在很多的地方都有Markdown文本的涉及，就像网页HTML中常出现的一级标题，二级标题等内容，设计初衷是为了有效的将其转换为XHTML或HTML，但是因为其简洁直观在网络中流行。</p>\n<h1>经常使用的编辑器</h1>\n<p>Markdown编辑器有很多，坚持一直免费的确很少，下面推荐一些Linux，Windows，Mac平台都可以使用的编辑器以及我使用下来的一些感受。</p>\n<ul style=\"list-style-type: circle;\">\n<li>Typora<br>Typora之前的beta版本是在GitHub里面开源，但是在1.0版本之后就开始收费。在Ubuntu等Linux发行版中安装0.11.18版本还是可以使用的，但是在Windows上使用会麻烦不少，不仅要调时间，还有一大堆操作。不如换一个软件了。<br><br></li>\n<li>Obsidian<br>这个编辑器是在逛星火商店的时候在工具分区中偶然发现的，这个编辑器很适合新手去使用，不需要背很多的标题符号就可以很快速的上手。但是在格式的控制上并不是非常明确。<br><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/7/e60ed255142140abbe38f32363a34b99.png\" alt=\"\" width=\"1280\" height=\"720\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/7/responsive/e60ed255142140abbe38f32363a34b99-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/7/responsive/e60ed255142140abbe38f32363a34b99-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/7/responsive/e60ed255142140abbe38f32363a34b99-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/7/responsive/e60ed255142140abbe38f32363a34b99-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/7/responsive/e60ed255142140abbe38f32363a34b99-xl.webp 1600w\"></figure></li>\n<li>MarkText<br>这个编辑器是在切换到Windows之后在GitHub上找到的第一个，发现这个和Typora的功能很像，而且可自定义的程度很高，就连显示的字体都可以自定义，但是在后面使用中发现格式规定上并不非常明确，也没有格式报错的功能。<br>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"添加图片\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/7/gallery/QQ20250102-220934.png\" data-size=\"960x1040\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/7/gallery/QQ20250102-220934-thumbnail.webp\" alt=\"\" width=\"768\" height=\"832\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/7/gallery/QQ20250102-221004.png\" data-size=\"950x650\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/7/gallery/QQ20250102-221004-thumbnail.webp\" alt=\"\" width=\"768\" height=\"525\"></a></figure>\n</div></div>\n</li>\n<li>Zettler<br>这个编辑器我现在一直在使用，从文件管理器，到语法格式的提示都非常全面，我现在还挑不出任何不满意的地方。<br><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/7/QQ20250102-221250.png\" alt=\"\" width=\"1920\" height=\"1040\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/7/responsive/QQ20250102-221250-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/7/responsive/QQ20250102-221250-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/7/responsive/QQ20250102-221250-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/7/responsive/QQ20250102-221250-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/7/responsive/QQ20250102-221250-xl.webp 1600w\"></figure></li>\n</ul>\n<p><br><br></p>\n<p> </p>",
            "image": "https://xyz-hgtc.github.io/media/posts/7/97389b98fb414996b651e3dc633a8681.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "软件随笔"
            ],
            "date_published": "2025-01-02T22:00:08+08:00",
            "date_modified": "2025-01-04T20:43:48+08:00"
        },
        {
            "id": "https://xyz-hgtc.github.io/kai-yuan-ruan-jian.html",
            "url": "https://xyz-hgtc.github.io/kai-yuan-ruan-jian.html",
            "title": "开源软件",
            "summary": "在使用过这么多的开源软件之后，我觉得我已经有一定的能力去评价它了，也顺便讲讲我使用过的开源软件。 软件这个词语应该都不陌生，日常接触到的操作系统，应用都是软件，可开源是什么呢？ 下面是必应的搜索结果： 那么问题又来了，源代码有是什么呢？ 这是GitHub开源社区中Linux版本bilibili的源码仓库： 第一张是这个项目的源码文件，第二张是这个项目的Release版本。Release就相当于是这个项目的发行版，完成品。就是已经被构建好的，可以直接使用的版本。 所以，开放源代码其实就是将所有代码文件全部公布出来，允许大家遵照协议进行修该并且发行和使用。这样就能保证你拿到的Source.zip文件是干净的，不会夹杂一些“私货”。 要说起我使用的第一个开源项目的应用软件应该是Windows上的Edgeless，这是一个制作启动盘的软件，毕竟当时并不了解PE是个什么东西，就干脆让人家帮我配置好得了。 还真的要感慨一下时间，我之前用的正式版版本还是3.5.0，现在4.1.0已经成为正式版了。 说完应用软件，也应该讲讲系统软件了。要不是因为这个系统软件，我也不会接触到这个应用软件。Deepin是一个基于Debian开发的Linux发行版，这是一个社区版，商业版本是统信公司的UOS系统。不过不知道玲珑应用什么时候成熟，那个时候就可以彻底离开Debian这个上游，成为一个真正独立的发行版了。 下面是Deepin系统的官方网站和最新的正式发行版Deepin V23的图片： 我当时使用的时候正式版本还是20.9，23还是处于Alpha阶段，一个完全不成熟，并且完全无法满足个人日常使用需求的状态。现在的V23正式版已经可以流畅的运行，视觉效果上丝毫不输Windows的情况下也能有良好的性能发挥，现在还加入了UOS AI的功能，逐渐开始接近AIPC的操作系统，虽然说对于很多崇尚简洁的人来说确实过于厚重了，但是这是国产操作系统质量的一次质的飞越。 但是还是因为图形库造成的卡顿及一些其他原因，我没有办法继续使用Deepin这个系统，在更换无数次系统之后，也默认了Firefox的存在，于是这个开源软件就渐渐的让我无法分开了。其实很大部分原因是谷歌的，因为大陆地区禁止谷歌服务，甚至有的时候连上GitHub看看别人的好项目都要非不少功夫，更别说是浏览器的数据同步了。于是能在大陆同步数据的Firefox就更好了，不仅可以兼容多平台，还能同步数据。 在写程序的时候需要规划，也就开始了解Markdown这个文本格式，从而知道了Typora这个好用的软件，可是很可惜的是，现在的版本已经不再在GitHub上面更新，而是开启收费了，现在能用到的最新的免费版是0.11.18，这也是仅仅是收费前在GitHub上面的beta版。但是Windows想要安装并且使用恐怕是有点费事了（要改本地时间等等）。 在Windows平台上更习惯使用MarkText进行写作，之前MarkText并不提供发行版的可安装软件包 写代码，听音乐已经是标配了。网易云音乐不知道为什么最近也关闭了Linux客户端的所有网络连接，导致已经没有办法使用了。但是端口还是可以调用的，毕竟Web版本是开放的，甚至可以调用API，所以YesplayMusic就成为了最好，甚至最美观的代替品。 说起写代码，那就不得不说说代码的编辑器了。Vim是我一直在使用一个编辑器，这就是一个开源软件，但是类似于无法复制等问题也让我同时装上了VSCodium这款VSCode的开源版本，但是因为扩展的问题，还是只能用于复制到剪切板了。 下面是VSCodium和Vim的截图：",
            "content_html": "<p>在使用过这么多的开源软件之后，我觉得我已经有一定的能力去评价它了，也顺便讲讲我使用过的开源软件。</p>\n<h1>什么是开源软件？</h1>\n<p>软件这个词语应该都不陌生，日常接触到的操作系统，应用都是软件，可开源是什么呢？</p>\n<p>下面是必应的搜索结果：</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/6/2024-12-20_21-18-md.webp\" alt=\"\" width=\"663\" height=\"389\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-18-md-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-18-md-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-18-md-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-18-md-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-18-md-xl.webp 1600w\"><figcaption>搜索引擎必应（Bing）的搜索结果</figcaption></figure>\n<p>那么问题又来了，源代码有是什么呢？<br><br>这是GitHub开源社区中Linux版本bilibili的源码仓库：</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"添加图片\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_21-41_1-2.png\" data-size=\"1892x946\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_21-41_1-2-thumbnail.webp\" alt=\"\" width=\"768\" height=\"384\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_21-41-3.png\" data-size=\"1884x940\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_21-41-3-thumbnail.webp\" alt=\"\" width=\"768\" height=\"383\"></a></figure>\n</div></div>\n<p>第一张是这个项目的源码文件，第二张是这个项目的Release版本。Release就相当于是这个项目的发行版，完成品。就是已经被构建好的，可以直接使用的版本。</p>\n<p>所以，开放源代码其实就是将所有代码文件全部公布出来，允许大家遵照协议进行修该并且发行和使用。这样就能保证你拿到的Source.zip文件是干净的，不会夹杂一些“私货”。</p>\n<h1>我的开源软件使用经历</h1>\n<p>要说起我使用的第一个开源项目的应用软件应该是Windows上的Edgeless，这是一个制作启动盘的软件，毕竟当时并不了解PE是个什么东西，就干脆让人家帮我配置好得了。</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/6/2024-12-20_21-53-2-md.webp\" alt=\"\" width=\"768\" height=\"397\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-53-2-md-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-53-2-md-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-53-2-md-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-53-2-md-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_21-53-2-md-xl.webp 1600w\"><figcaption>网址及主页</figcaption></figure>\n<p>还真的要感慨一下时间，我之前用的正式版版本还是3.5.0，现在4.1.0已经成为正式版了。<br><br>说完应用软件，也应该讲讲系统软件了。要不是因为这个系统软件，我也不会接触到这个应用软件。Deepin是一个基于Debian开发的Linux发行版，这是一个社区版，商业版本是统信公司的UOS系统。不过不知道玲珑应用什么时候成熟，那个时候就可以彻底离开Debian这个上游，成为一个真正独立的发行版了。<br><br>下面是Deepin系统的官方网站和最新的正式发行版Deepin V23的图片：</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"添加图片\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_22-01.png\" data-size=\"1888x944\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_22-01-thumbnail.webp\" alt=\"\" width=\"768\" height=\"384\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/202408220829048047_image.png\" data-size=\"954x676\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/202408220829048047_image-thumbnail.webp\" alt=\"\" width=\"768\" height=\"544\"></a></figure>\n</div></div>\n<p>我当时使用的时候正式版本还是20.9，23还是处于Alpha阶段，一个完全不成熟，并且完全无法满足个人日常使用需求的状态。现在的V23正式版已经可以流畅的运行，视觉效果上丝毫不输Windows的情况下也能有良好的性能发挥，现在还加入了UOS AI的功能，逐渐开始接近AIPC的操作系统，虽然说对于很多崇尚简洁的人来说确实过于厚重了，但是这是国产操作系统质量的一次质的飞越。<br><br>但是还是因为图形库造成的卡顿及一些其他原因，我没有办法继续使用Deepin这个系统，在更换无数次系统之后，也默认了Firefox的存在，于是这个开源软件就渐渐的让我无法分开了。其实很大部分原因是谷歌的，因为大陆地区禁止谷歌服务，甚至有的时候连上GitHub看看别人的好项目都要非不少功夫，更别说是浏览器的数据同步了。于是能在大陆同步数据的Firefox就更好了，不仅可以兼容多平台，还能同步数据。</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/6/2024-12-20_22-17-md.webp\" alt=\"\" width=\"768\" height=\"419\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-17-md-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-17-md-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-17-md-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-17-md-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-17-md-xl.webp 1600w\"><figcaption>Debian12上的Firefox</figcaption></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/6/Wei-Xin-Tu-Pian_20241228095457.png\" alt=\"\" width=\"1920\" height=\"1041\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/6/responsive/Wei-Xin-Tu-Pian_20241228095457-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/6/responsive/Wei-Xin-Tu-Pian_20241228095457-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/6/responsive/Wei-Xin-Tu-Pian_20241228095457-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/6/responsive/Wei-Xin-Tu-Pian_20241228095457-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/6/responsive/Wei-Xin-Tu-Pian_20241228095457-xl.webp 1600w\"><figcaption>Windows10上的Firefox</figcaption></figure>\n<p>在写程序的时候需要规划，也就开始了解Markdown这个文本格式，从而知道了Typora这个好用的软件，可是很可惜的是，现在的版本已经不再在GitHub上面更新，而是开启收费了，现在能用到的最新的免费版是0.11.18，这也是仅仅是收费前在GitHub上面的beta版。但是Windows想要安装并且使用恐怕是有点费事了（要改本地时间等等）。</p>\n<p>在Windows平台上更习惯使用MarkText进行写作，之前MarkText并不提供发行版的可安装软件包</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/6/2024-12-20_22-22-md.webp\" alt=\"\" width=\"768\" height=\"419\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-22-md-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-22-md-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-22-md-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-22-md-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/6/responsive/2024-12-20_22-22-md-xl.webp 1600w\"><figcaption>Debian12上的Typora</figcaption></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/6/QQ20241228-095837.png\" alt=\"\" width=\"1919\" height=\"1039\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/6/responsive/QQ20241228-095837-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/6/responsive/QQ20241228-095837-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/6/responsive/QQ20241228-095837-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/6/responsive/QQ20241228-095837-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/6/responsive/QQ20241228-095837-xl.webp 1600w\"><figcaption>Windows10上的MarkText</figcaption></figure>\n<p>写代码，听音乐已经是标配了。网易云音乐不知道为什么最近也关闭了Linux客户端的所有网络连接，导致已经没有办法使用了。但是端口还是可以调用的，毕竟Web版本是开放的，甚至可以调用API，所以YesplayMusic就成为了最好，甚至最美观的代替品。</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"添加图片\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_22-25_1-2.png\" data-size=\"1343x737\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_22-25_1-2-thumbnail.webp\" alt=\"\" width=\"768\" height=\"421\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_22-25-2.png\" data-size=\"1334x744\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-20_22-25-2-thumbnail.webp\" alt=\"\" width=\"768\" height=\"428\"></a></figure>\n</div></div>\n<p>说起写代码，那就不得不说说代码的编辑器了。Vim是我一直在使用一个编辑器，这就是一个开源软件，但是类似于无法复制等问题也让我同时装上了VSCodium这款VSCode的开源版本，但是因为扩展的问题，还是只能用于复制到剪切板了。<br><br>下面是VSCodium和Vim的截图：</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"添加图片\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-21_10-45.png\" data-size=\"1893x1030\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-21_10-45-thumbnail.webp\" alt=\"\" width=\"768\" height=\"418\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-21_10-46.png\" data-size=\"1894x1026\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-21_10-46-thumbnail.webp\" alt=\"\" width=\"768\" height=\"416\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-21_10-47.png\" data-size=\"1893x1028\"><img loading=\"lazy\" src=\"https://xyz-hgtc.github.io/media/posts/6/gallery/2024-12-21_10-47-thumbnail.webp\" alt=\"\" width=\"768\" height=\"417\"></a></figure>\n</div></div>",
            "image": "https://xyz-hgtc.github.io/media/posts/6/OIP-C-md.webp",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "软件随笔"
            ],
            "date_published": "2024-12-28T09:49:41+08:00",
            "date_modified": "2024-12-28T10:19:26+08:00"
        },
        {
            "id": "https://xyz-hgtc.github.io/debian-12-i3wm-wan-mei-qu-dong.html",
            "url": "https://xyz-hgtc.github.io/debian-12-i3wm-wan-mei-qu-dong.html",
            "title": "Debian 12 + i3wm 完美驱动",
            "summary": "i3wm 想要讲清楚i3wm还是要从DE,WM等词语开始讲起。 DE(Desktop Enviroment)，中文意思是桌面环境。桌面环境就类似于Windows上面能看到的图形界面，换一种说法也就是常说的UI——用户界面。仔细观察每一个应用的窗口，你会发现右上角的三个键在很多应用中图标，或者说在鼠标放上去的时候显示的不一样，这就是每个应用自己做窗口而不和系统兼容的后果，虽然说苹果的左侧三个图标都有颜色，但是App内部的图形界面全部都是苹果的，这样看起来其实也没有多美观。 WM(Windows Manager)，中文意思是窗口管理器，将窗口外面的三个键去掉后就是。 所以i3wm就是去掉了桌面的窗口控制，但是很多东西就相应的消失了，就像常见的窗口阴影（如果你认为没用的话可以试试在Windows中找到“系统-设备信息-高级系统设置”，然后关闭窗口下阴影，然后再打开Edge浏览器，看看右键菜单还能不能正常显示圆角。），所以需要配置的自然也不少了。 点击此链接即可下载镜像。 在Windows系统上，使用Rufus工具写入，此为标准版下载链接。在Linux和Windows系统都可以使用的是ventoy，Windows下载 Linux下载。 正常引导并进入，正常选择即可。在选择镜像源的时候建议选择清华的，我多次安装只有清华源每次都正常。 选择完软件源后就会出现桌面选择的界面，这里只选择最后一项，也就是标准系统工具即可。 在进入本地系统后就是类似于终端的界面，这里用户名填root，密码就是你自己设置的管理员密码，并非用户密码。 所需要的软件有： sudo（普通用户调用管理员权限） lightdm （登录管理器） i3（i3的所有软件包，只想要窗口管理器的可以选择i3-wm） Thunar / ranger（文件管理器，thunar是图形界面，ranger是命令行，自行选择即可）&hellip;",
            "content_html": "<h1>i3wm</h1>\n<p>想要讲清楚i3wm还是要从DE,WM等词语开始讲起。</p>\n<p>DE(Desktop Enviroment)，中文意思是桌面环境。桌面环境就类似于Windows上面能看到的图形界面，换一种说法也就是常说的UI——用户界面。仔细观察每一个应用的窗口，你会发现右上角的三个键在很多应用中图标，或者说在鼠标放上去的时候显示的不一样，这就是每个应用自己做窗口而不和系统兼容的后果，虽然说苹果的左侧三个图标都有颜色，但是App内部的图形界面全部都是苹果的，这样看起来其实也没有多美观。</p>\n<p>WM(Windows Manager)，中文意思是窗口管理器，将窗口外面的三个键去掉后就是。</p>\n<p>所以<strong>i3wm</strong>就是去掉了桌面的窗口控制，但是很多东西就相应的消失了，就像常见的窗口阴影（如果你认为没用的话可以试试在Windows中找到“系统-设备信息-高级系统设置”，然后关闭窗口下阴影，然后再打开Edge浏览器，看看右键菜单还能不能正常显示圆角。），所以需要配置的自然也不少了。</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/5/2024-12-14_21-18-lg-2.webp\" alt=\"\" width=\"1024\" height=\"576\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-14_21-18-lg-2-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-14_21-18-lg-2-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-14_21-18-lg-2-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-14_21-18-lg-2-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-14_21-18-lg-2-xl.webp 1600w\"><figcaption>这是我的i3wm</figcaption></figure>\n<h1>安装</h1>\n<h4>镜像下载</h4>\n<p data-pid=\"hrt3i0S2\">点击<a href=\"https://link.zhihu.com/?target=https%3A//cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-12.5.0-amd64-netinst.iso\" target=\"null\" rel=\"nofollow\">此链接</a>即可下载镜像。</p>\n<p data-pid=\"YmKh6wZc\"><strong>在Windows系统上，</strong>使用Rufus工具写入，此为标准版<a href=\"https://link.zhihu.com/?target=https%3A//github.com/pbatard/rufus/releases/download/v4.5/rufus-4.5.exe\" class=\"wrap external\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-za-detail-view-id=\"1043\">下载链接</a>。在Linux和Windows系统都可以使用的是<a class=\"RichContent-EntityWord css-b7erz1\" data-za-not-track-link=\"true\" data-paste-text=\"true\" href=\"https://zhida.zhihu.com/search?content_id=244631996&amp;content_type=Article&amp;match_order=1&amp;q=ventoy&amp;zhida_source=entity\" target=\"_blank\" rel=\"noopener\">ventoy</a>，<a href=\"https://link.zhihu.com/?target=https%3A//www.lanzoui.com/i5ETa219q9qj\" class=\"wrap external\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-za-detail-view-id=\"1043\">Windows下载</a> <a href=\"https://link.zhihu.com/?target=https%3A//www.lanzoui.com/iIzVH219q9dg\" class=\"wrap external\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-za-detail-view-id=\"1043\">Linux下载</a>。</p>\n<h4 data-pid=\"YmKh6wZc\">Debian 12 网络安装注意事项</h4>\n<p data-pid=\"66-lHWwa\">正常引导并进入，正常选择即可。在选择镜像源的时候建议选择清华的，我多次安装只有清华源每次都正常。</p>\n<p data-pid=\"yh0qXKnG\">选择完软件源后就会出现桌面选择的界面，这里只选择最后一项，也就是标准系统工具即可。</p>\n<h4 data-pid=\"yh0qXKnG\">i3wm 以及其余组件的安装</h4>\n<p>在进入本地系统后就是类似于终端的界面，这里<strong><i>用户名填root</i></strong>，密码就是你自己设置的<strong>管理员密码</strong>，<strong>并非用户密码</strong>。</p>\n<p data-pid=\"q9cce39n\">所需要的软件有：</p>\n<p data-pid=\"RW3XYmXf\">sudo（普通用户调用管理员权限）</p>\n<p data-pid=\"1xAv1FjT\">lightdm （登录管理器）</p>\n<p data-pid=\"mkiqqkDX\">i3（i3的所有软件包，只想要窗口管理器的可以选择i3-wm）</p>\n<p data-pid=\"uyoH4N7_\">Thunar / ranger（文件管理器，thunar是图形界面，ranger是命令行，自行选择即可）</p>\n<p data-pid=\"OckmML5A\">xfce4-terminal / Alacritty （都为终端，xfce4-terminal具有图形界面，自行选择即可）</p>\n<p data-pid=\"GW0X1wXS\">rofi（图形化drun）</p>\n<p data-pid=\"ltmUQHjf\">picom（轻量级窗口管理特效的首选）</p>\n<p data-pid=\"__MpH0ST\">i3-gaps （i3窗口界面，安装i3的直接跳过即可，只安装i3-wm的需要安装）</p>\n<p data-pid=\"6_p20IYg\">i3lock（i3锁屏界面，自行选择是否安装。安装i3的自带）</p>\n<p data-pid=\"G5KNDtox\">i3stauts（i3bar中显示时间，电量等信息的小组件。安装i3自带）</p>\n<p data-pid=\"vUaYNdPY\">network-manager-gnome（gnome网络管理器，用于切换WiFi网络）</p>\n<p data-pid=\"FGGixe3P\">xfce4-power-manager（电源管理器）</p>\n<p data-pid=\"3Pak9fEZ\">blueman（蓝牙管理器）</p>\n<p data-pid=\"BHFfGq4D\">volumeicon-alsa（声音控制）</p>\n<p data-pid=\"I4X3gxGn\">lxappearance（界面外观更换）</p>\n<p data-pid=\"Pqi2bCYl\">feh（更换壁纸工具）</p>\n<p data-pid=\"Pqi2bCYl\">输入以下代码即可安装：</p>\n<pre data-pid=\"Pqi2bCYl\"><code>apt install sudo lightdm i3 ranger alacritty rofi picom network-manager-gnome xfce4-power-manager blueman volumeicon-alsa lxappearance feh</code></pre>\n<p data-pid=\"Pqi2bCYl\"> </p>\n<p data-pid=\"Pqi2bCYl\"><strong>组建安装完成后我们还需要给自己的用户设置一个临时用户权限sudo：</strong></p>\n<pre class=\"highlight\"><code class=\"language-text\">sudo usermod -aG sudo username</code></pre>\n<div> </div>\n<div>随后重启即可</div>\n<div> </div>\n<div>\n<h1>配置</h1>\n<h4>i3</h4>\n<div>\n<pre><code># This file has been auto-generated by i3-config-wizard(1).</code><br><br><code># It will not be overwritten, so edit it as you like.</code><br><br><code>#</code><br><br><code># Should you change your keyboard layout some time, delete</code><br><br><code># this file and re-run i3-config-wizard(1).</code><br><br><code>#</code><br><br><code># i3 config file (v4)</code><br><br><code>#</code><br><br><code># Please see https://i3wm.org/docs/userguide.html for a complete reference!</code><br><br><code>set $mod Mod4</code><br><br><code>exec --no-startup-id fcitx5</code><br><br><code>exec --no-startup-id xfce4-power-manager</code><br><br><code>exec --no-startup-id volumeicon</code><br><br><code>exec --no-startup-id picom</code><br><br><code>exec --no-startup-id diodon</code><br><br><code>exec --no-startup-id flameshot</code><br><br><code>exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1</code><br><br><code>exec --no-startup-id feh --bg-fill /home/xyz/Pictures/Wallpapers/Wallpaper01.png</code><br><br><code>bindsym Ctrl+Shift+s exec catfish</code><br><br><code>bindsym $mod+Ctrl+p exec --no-startup-id systemctl poweroff -i</code><br><br><code>bindsym $mod+Ctrl+r exec --no-startup-id systemctl reboot</code><br><br><code>bindsym $mod+l exec --no-startup-id i3lock</code><br><br><code>new_window none</code><br><br><code>new_float none</code><br><br><code>hide_edge_borders both</code><br><br><code>gaps inner 8</code><br><br><code>gaps outer 6</code><br><br><code># Font for window titles. Will also be used by the bar unless a different font</code><br><br><code># is used in the bar {} block below.</code><br><br><code>font pango:monospace 8</code><br><br><code># This font is widely installed, provides lots of unicode glyphs, right-to-left</code><br><br><code># text rendering and scalability on retina/hidpi displays (thanks to pango).</code><br><br><code>#font pango:DejaVu Sans Mono 8</code><br><br><code># Start XDG autostart .desktop files using dex. See also</code><br><br><code># https://wiki.archlinux.org/index.php/XDG_Autostart</code><br><br><code>exec --no-startup-id dex --autostart --environment i3</code><br><br><code># The combination of xss-lock, nm-applet and pactl is a popular choice, so</code><br><br><code># they are included here as an example. Modify as you see fit.</code><br><br><code># xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the</code><br><br><code># screen before suspend. Use loginctl lock-session to lock your screen.</code><br><br><code>exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork</code><br><br><code># NetworkManager is the most popular way to manage wireless networks on Linux,</code><br><br><code># and nm-applet is a desktop environment-independent system tray GUI for it.</code><br><br><code>exec --no-startup-id nm-applet</code><br><br><code># Use pactl to adjust volume in PulseAudio.</code><br><br><code>set $refresh_i3status killall -SIGUSR1 i3status</code><br><br><code>bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% &amp;&amp; $refresh_i3status</code><br><br><code>bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% &amp;&amp; $refresh_i3status</code><br><br><code>bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle &amp;&amp; $refresh_i3status</code><br><br><code>bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle &amp;&amp; $refresh_i3status</code><br><br><code># Use Mouse+$mod to drag floating windows to their wanted position</code><br><br><code>floating_modifier $mod</code><br><br><code># move tiling windows via drag &amp; drop by left-clicking into the title bar,</code><br><br><code># or left-clicking anywhere into the window while holding the floating modifier.</code><br><br><code># tiling_drag modifier titlebar</code><br><br><code># start a terminal</code><br><br><code>bindsym $mod+Return exec i3-sensible-terminal</code><br><br><code># kill focused window</code><br><br><code>bindsym $mod+q kill</code><br><br><code># start dmenu (a program launcher)</code><br><br><code>#bindsym $mod+d exec --no-startup-id dmenu_run</code><br><br><code># A more modern dmenu replacement is rofi:</code><br><br><code>bindsym $mod+d exec --no-startup-id \"rofi -modi drun,run -show drun -show-icons\"</code><br><br><code># There also is i3-dmenu-desktop which only displays applications shipping a</code><br><br><code># .desktop file. It is a wrapper around dmenu, so you need that installed.</code><br><br><code># bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop</code><br><br><code># change focus</code><br><br><code>#bindsym $mod+j focus left</code><br><br><code>#bindsym $mod+k focus down</code><br><br><code>#bindsym $mod+l focus up</code><br><br><code>#bindsym $mod+semicolon focus right</code><br><br><code># alternatively, you can use the cursor keys:</code><br><br><code>bindsym $mod+Left focus left</code><br><br><code>bindsym $mod+Down focus down</code><br><br><code>bindsym $mod+Up focus up</code><br><br><code>bindsym $mod+Right focus right</code><br><br><code># move focused window</code><br><br><code>bindsym $mod+Shift+j move left</code><br><br><code>bindsym $mod+Shift+k move down</code><br><br><code>bindsym $mod+Shift+l move up</code><br><br><code>bindsym $mod+Shift+semicolon move right</code><br><br><code># alternatively, you can use the cursor keys:</code><br><br><code>bindsym $mod+Shift+Left move left</code><br><br><code>bindsym $mod+Shift+Down move down</code><br><br><code>bindsym $mod+Shift+Up move up</code><br><br><code>bindsym $mod+Shift+Right move right</code><br><br><code># split in horizontal orientation</code><br><br><code>bindsym $mod+h split h</code><br><br><code># split in vertical orientation</code><br><br><code>bindsym $mod+v split v</code><br><br><code># enter fullscreen mode for the focused container</code><br><br><code>bindsym $mod+f fullscreen toggle</code><br><br><code># change container layout (stacked, tabbed, toggle split)</code><br><br><code>bindsym $mod+s layout stacking</code><br><br><code>bindsym $mod+w layout tabbed</code><br><br><code>bindsym $mod+e layout toggle split</code><br><br><code># toggle tiling / floating</code><br><br><code>bindsym $mod+Shift+space floating toggle</code><br><br><code># change focus between tiling / floating windows</code><br><br><code>bindsym $mod+space focus mode_toggle</code><br><br><code># focus the parent container</code><br><br><code>bindsym $mod+a focus parent</code><br><br><code># focus the child container</code><br><br><code>#bindsym $mod+d focus child</code><br><br><code># Define names for default workspaces for which we configure key bindings later on.</code><br><br><code># We use variables to avoid repeating the names in multiple places.</code><br><br><code>set $ws1 \"1\"</code><br><br><code>set $ws2 \"2\"</code><br><br><code>set $ws3 \"3\"</code><br><br><code>set $ws4 \"4\"</code><br><br><code>set $ws5 \"5\"</code><br><br><code>set $ws6 \"6\"</code><br><br><code>set $ws7 \"7\"</code><br><br><code>set $ws8 \"8\"</code><br><br><code>set $ws9 \"9\"</code><br><br><code>set $ws10 \"10\"</code><br><br><code># switch to workspace</code><br><br><code>bindsym $mod+1 workspace number $ws1</code><br><br><code>bindsym $mod+2 workspace number $ws2</code><br><br><code>bindsym $mod+3 workspace number $ws3</code><br><br><code>bindsym $mod+4 workspace number $ws4</code><br><br><code>bindsym $mod+5 workspace number $ws5</code><br><br><code>bindsym $mod+6 workspace number $ws6</code><br><br><code>bindsym $mod+7 workspace number $ws7</code><br><br><code>bindsym $mod+8 workspace number $ws8</code><br><br><code>bindsym $mod+9 workspace number $ws9</code><br><br><code>bindsym $mod+0 workspace number $ws10</code><br><br><code># move focused container to workspace</code><br><br><code>bindsym $mod+Shift+1 move container to workspace number $ws1</code><br><br><code>bindsym $mod+Shift+2 move container to workspace number $ws2</code><br><br><code>bindsym $mod+Shift+3 move container to workspace number $ws3</code><br><br><code>bindsym $mod+Shift+4 move container to workspace number $ws4</code><br><br><code>bindsym $mod+Shift+5 move container to workspace number $ws5</code><br><br><code>bindsym $mod+Shift+6 move container to workspace number $ws6</code><br><br><code>bindsym $mod+Shift+7 move container to workspace number $ws7</code><br><br><code>bindsym $mod+Shift+8 move container to workspace number $ws8</code><br><br><code>bindsym $mod+Shift+9 move container to workspace number $ws9</code><br><br><code>bindsym $mod+Shift+0 move container to workspace number $ws10</code><br><br><code># reload the configuration file</code><br><br><code>bindsym $mod+Shift+c reload</code><br><br><code># restart i3 inplace (preserves your layout/session, can be used to upgrade i3)</code><br><br><code>bindsym $mod+Shift+r restart</code><br><br><code># exit i3 (logs you out of your X session)</code><br><br><code>bindsym $mod+Shift+e exec \"i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'\"</code><br><br><code># resize window (you can also use the mouse for that)</code><br><br><code>mode \"resize\" {</code><br><br><code># These bindings trigger as soon as you enter the resize mode</code><br><br><code># Pressing left will shrink the window’s width.</code><br><br><code># Pressing right will grow the window’s width.</code><br><br><code># Pressing up will shrink the window’s height.</code><br><br><code># Pressing down will grow the window’s height.</code><br><br><code>bindsymjresizeshrinkwidth10pxor10ppt</code><br><br><code>bindsymkresizegrowheight10pxor10ppt</code><br><br><code>bindsymlresizeshrinkheight10pxor10ppt</code><br><br><code>bindsymsemicolonresizegrowwidth10pxor10ppt</code><br><br><code># same bindings, but for the arrow keys</code><br><br><code>bindsymLeftresizeshrinkwidth10pxor10ppt</code><br><br><code>bindsymDownresizegrowheight10pxor10ppt</code><br><br><code>bindsymUpresizeshrinkheight10pxor10ppt</code><br><br><code>bindsymRightresizegrowwidth10pxor10ppt</code><br><br><code># back to normal: Enter or Escape or $mod+r</code><br><br><code>bindsymReturnmode\"default\"</code><br><br><code>bindsymEscapemode\"default\"</code><br><br><code>bindsym$mod+rmode\"default\"</code><br><br><code>}</code><br><br><code>bindsym $mod+r mode \"resize\"</code><br><br><code># Start i3bar to display a workspace bar (plus the system information i3status</code><br><br><code># finds out, if available)</code><br><br><code>bar{</code><br><br><code># font pango:JetBrains Mono 8</code><br><br><code>fontpango:MiSansMedium8</code><br><br><code>positiontop</code><br><br><code>tray_outputprimary</code><br><br><code>outputprimary</code><br><br><code>status_commandi3status</code><br><br><code>}</code></pre>\n</div>\n<h4>i3 status</h4>\n<div>\n<pre><code>general {</code><br><br><code>colors= true</code><br><br><code>interval= 5</code><br><br><code>color_good=\"#2AA198\"</code><br><br><code>color_bad=\"#bf616a\"</code><br><br><code>color_degraded=\"#ebcb8b\"</code><br><br><code>separator=\"|\"</code><br><br><code>}</code><br><br><code># order += \"ipv6\"</code><br><br><code>## 显示cpu温度</code><br><br><code>order += \"cpu_temperature 0\"</code><br><br><code>order += \"cpu_usage\"</code><br><br><code>## 取消显示硬盘使用情况</code><br><br><code>#order += \"disk /\"</code><br><br><code># order += \"disk /home\"</code><br><br><code>## 无线网络信息使用默认参数 _first_ 可能无法找到无线信息，这里直接制定我的无线网络的名称，可以使用 ip addr查看，相当于ifconfig</code><br><br><code>#order += \"wireless _first_\"</code><br><br><code>order += \"wireless wlp3s0\"</code><br><br><code>order += \"ethernet _first_\"</code><br><br><code># order += \"load\"</code><br><br><code>order += \"memory\"</code><br><br><code>order += \"tztime local\"</code><br><br><code>order += \"battery all\"</code><br><br><code>## 定制无线网络信息</code><br><br><code>wireless wlp3s0 {</code><br><br><code>format_up=\" %quality  %essid %ip\"</code><br><br><code>format_down=\"W: down\"</code><br><br><code>}</code><br><br><code>cpu_usage {</code><br><br><code>format=\"  %usage \"</code><br><br><code>}</code><br><br><code>load {</code><br><br><code>format=\" load %1min \"</code><br><br><code># max_threshold = 0.3</code><br><br><code>}</code><br><br><code>disk \"/\" {</code><br><br><code># format = \" hdd %avail \"</code><br><br><code>format=\" ⛁ %avail \"</code><br><br><code>}</code><br><br><code>ethernet _first_ {</code><br><br><code># if you use %speed, i3status requires root privileges</code><br><br><code># format_up = \" lan: %ip %speed \"</code><br><br><code>format_up=\" %ip  %speed\"</code><br><br><code>format_down=\" L: down \"</code><br><br><code>}</code><br><br><code>battery all {</code><br><br><code># format = \"%status %percentage %remaining %emptytime\"</code><br><br><code>format=\" %status %percentage \"</code><br><br><code>format_down=\"No battery\"</code><br><br><code>last_full_capacity= true</code><br><br><code>integer_battery_capacity= true</code><br><br><code># status_chr = \"\"</code><br><br><code>status_chr=\"⚡\"</code><br><br><code># status_bat = \"bat\"</code><br><br><code>status_bat=\"☉\"</code><br><br><code># status_bat = \"\"</code><br><br><code># status_unk = \"?\"</code><br><br><code>status_unk=\"\"</code><br><br><code># status_full = \"\"</code><br><br><code>status_full=\"☻\"</code><br><br><code>low_threshold= 15</code><br><br><code>threshold_type= time</code><br><br><code>}</code><br><br><code>memory {</code><br><br><code>format=\" %used / %available\"</code><br><br><code>threshold_degraded=\"1G\"</code><br><br><code>format_degraded=\"MEMORY &lt; %available\"</code><br><br><code>}</code><br><br><code>## 日期改成自己喜欢的格式</code><br><br><code>tztime local {</code><br><br><code># format = \"%Y-%m-%d %H:%M:%S\"</code><br><br><code>format=\" %m月-%d日 %H:%M \"</code><br><br><code>}</code><br><br><code>## 定制温度控制器</code><br><br><code>cpu_temperature 0 {</code><br><br><code>format=\" %degrees °C\"</code><br><br><code>max_threshold= 85</code><br><br><code>path=\"/sys/class/thermal/thermal_zone0/temp\"</code><br><br><code>}</code></pre>\n</div>\n<div> </div>\n<h4>dunst</h4>\n<div>\n<pre><code>[global]</code><br><br><code>monitor = 0</code><br><br><code>follow = mouse</code><br><br><code>geometry = \"320x6-30+60\"</code><br><br><code>indicate_hidden = yes</code><br><br><code>shrink = no</code><br><br><code>notification_height = 7</code><br><br><code>separator_height = 1</code><br><br><code>padding = 10</code><br><br><code>horizontal_padding = 10</code><br><br><code>frame_width = 2</code><br><br><code>frame_color = \"#aaaaaa\"</code><br><br><code>separator_color = frame</code><br><br><code>sort = yes</code><br><br><code>idle_threshold = 120</code><br><br><code>font = MiSans Medium 10</code><br><br><code>line_height = 0</code><br><br><code>markup = full</code><br><br><code>format = \"&lt;span&gt;&lt;b&gt;%s %p&lt;/b&gt;&lt;/span&gt;\\n%b\"</code><br><br><code>alignment = left</code><br><br><code>show_age_threshold = 60</code><br><br><code>word_wrap = yes</code><br><br><code>ellipsize = middle</code><br><br><code>ignore_newline = no</code><br><br><code>stack_duplicates = true</code><br><br><code>hide_duplicate_count = false</code><br><br><code>show_indicators = yes</code><br><br><code>icon_position = left</code><br><br><code>max_icon_size = 48</code><br><br><code>icon_path = /usr/share/icons/Arc/status/48/:/usr/share/icons/Arc/devices/48/:/usr/share/icons/Papirus/48x48/apps/</code><br><br><code>sticky_history = yes</code><br><br><code>history_length = 20</code><br><br><code>always_run_script = true</code><br><br><code>startup_notification = false</code><br><br><code>verbosity = mesg</code><br><br><code>corner_radius = 5</code><br><br><code>force_xinerama = false</code><br><br><code>mouse_left_click = do_action</code><br><br><code>mouse_middle_click = close_all</code><br><br><code>mouse_right_click = close_current</code><br><br><code>[shortcuts]</code><br><br><code>#close = ctrl+space</code><br><br><code>#history = ctrl+shift+space</code><br><br><code>#context = ctrl+shift+period</code><br><br><code>[urgency_low]</code><br><br><code># IMPORTANT: colors have to be defined in quotation marks.</code><br><br><code># Otherwise the '#' and following would be interpreted as a comment.</code><br><br><code>background=\"#2B2F36\"</code><br><br><code>foreground=\"#b6a49b\"</code><br><br><code>timeout = 5</code><br><br><code>[urgency_normal]</code><br><br><code>background=\"#2B2F36\"</code><br><br><code>foreground=\"#b6a49b\"</code><br><br><code>timeout = 10</code><br><br><code>[urgency_critical]</code><br><br><code>background=\"#2B2F36\"</code><br><br><code>foreground=\"#b6a49b\"</code><br><br><code>timeout = 0</code></pre>\n<div> </div>\n<h4>Picom</h4>\n<div>\n<pre><code>#################################</code><br><br><code># Shadows #</code><br><br><code>#################################</code><br><br><code># 在 Windows 上启用客户端阴影。注意桌面窗口</code><br><br><code># (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') 永远不会有阴影，</code><br><br><code># 除非使用 wintypes 选项明确要求。</code><br><br><code>#</code><br><br><code># shadow = false</code><br><br><code>shadow = true;</code><br><br><code># 阴影的模糊半径，以像素为单位。 （默认为 12）</code><br><br><code># shadow-radius = 12</code><br><br><code>shadow-radius = 30;</code><br><br><code># 阴影的不透明度。 （0.0 - 1.0，默认为 0.75）</code><br><br><code>shadow-opacity = .75</code><br><br><code># 阴影的左偏移，以像素为单位。 （默认为 -15）</code><br><br><code># shadow-offset-x = -15</code><br><br><code>shadow-offset-x = -15;</code><br><br><code># 阴影的顶部偏移量，以像素为单位。 （默认为 -15）</code><br><br><code># shadow-offset-y = -15</code><br><br><code>shadow-offset-y = -15;</code><br><br><code># 阴影的红色值（0.0 - 1.0，默认为 0）。</code><br><br><code># shadow-red = 0</code><br><br><code># 阴影的绿色值（0.0 - 1.0，默认为 0）。</code><br><br><code># shadow-green = 0</code><br><br><code># 阴影的蓝色值（0.0 - 1.0，默认为 0）。</code><br><br><code># shadow-blue = 0</code><br><br><code># 阴影的十六进制字符串颜色值（#000000 - #FFFFFF，默认为#000000）。此选项将覆盖选项集阴影-（红色/绿色/蓝色）</code><br><br><code># shadow-color = \"#000000\"</code><br><br><code># 指定不应该有阴影的窗口的条件列表。</code><br><br><code>#</code><br><br><code># examples:</code><br><br><code># shadow-exclude = \"n:e:Notification\";</code><br><br><code>#</code><br><br><code># shadow-exclude = []</code><br><br><code>shadow-exclude = [</code><br><br><code>\"name = 'Notification'\",</code><br><br><code>\"class_g = 'Conky'\",</code><br><br><code>\"class_g ?= 'Notify-osd'\",</code><br><br><code>\"class_g = 'Cairo-clock'\",</code><br><br><code>\"name *= 'Fcitx5'\",</code><br><br><code>\"_GTK_FRAME_EXTENTS@:c\"</code><br><br><code>];</code><br><br><code># 指定不应覆盖阴影的窗口条件列表，例如停靠窗口。</code><br><br><code># clip-shadow-above = []</code><br><br><code># 指定一个 X 几何图形来描述不应该出现阴影的区域</code><br><br><code># 被绘制在，比如一个停靠窗口区域。采用</code><br><br><code># shadow-exclude-reg u003d \"x10+0+0\"</code><br><br><code># 例如，如果屏幕底部的 10 个像素不应绘制阴影。</code><br><br><code>#</code><br><br><code># shadow-exclude-reg = \"\"</code><br><br><code># 在特定的 Xinerama 屏幕上将窗口的阴影完全裁剪到屏幕上。</code><br><br><code># xinerama-shadow-crop = false</code><br><br><code>#################################</code><br><br><code># Fading #</code><br><br><code>#################################</code><br><br><code># 在打开/关闭和不透明度变化时淡入/淡出窗口，</code><br><br><code># unless no-fading-openclose is used.</code><br><br><code># fading = false</code><br><br><code>fading = true;</code><br><br><code># 淡入时步骤之间的不透明度变化。（0.01 - 1.0，默认为 0.028）</code><br><br><code># fade-in-step = 0.028</code><br><br><code>fade-in-step = 0.04;</code><br><br><code># 淡出时步骤之间的不透明度变化。 （0.01 - 1.0，默认为 0.03）</code><br><br><code># fade-out-step = 0.03</code><br><br><code>fade-out-step = 0.04;</code><br><br><code># 淡入淡出步骤之间的时间，以毫秒为单位。 （&gt; 0，默认为 10）</code><br><br><code># fade-delta = 10</code><br><br><code># 指定不应褪色的窗口条件列表。</code><br><br><code># fade-exclude = []</code><br><br><code># 不要在窗口打开/关闭时淡入淡出。</code><br><br><code>no-fading-openclose = true</code><br><br><code># 不要使用 WM 框架淡化被破坏的 ARGB 窗口。解决 Openbox、Fluxbox 等中的错误。</code><br><br><code># no-fading-destroyed-argb = false</code><br><br><code>#################################</code><br><br><code># Transparency / Opacity #</code><br><br><code>#################################</code><br><br><code># 非活动窗口的不透明度。 （0.1 - 1.0，默认为 1.0）</code><br><br><code># inactive-opacity = 1</code><br><br><code>inactive-opacity = 0.7;</code><br><br><code># 窗口标题栏和边框的不透明度。 （0.1 - 1.0，默认禁用）</code><br><br><code># frame-opacity = 1.0</code><br><br><code># frame-opacity = 0.9;</code><br><br><code># 让 -i 设置的非活动不透明度覆盖窗口的 '_NET_WM_WINDOW_OPACITY' 值。</code><br><br><code># inactive-opacity-override = true</code><br><br><code># inactive-opacity-override = false;</code><br><br><code># 活动窗口的默认不透明度。 （0.0 - 1.0，默认为 1.0）</code><br><br><code>active-opacity = 0.85</code><br><br><code># 使非活动窗口变暗。 （0.0 - 1.0，默认为 0.0）</code><br><br><code># inactive-dim = 0.0</code><br><br><code># 指定不应该被视为焦点的窗口的条件列表。</code><br><br><code># focus-exclude = []</code><br><br><code>focus-exclude = [ \"class_g = 'Cairo-clock'\" ];</code><br><br><code># 使用固定的非活动暗度值，而不是根据窗口不透明度进行调整。</code><br><br><code># inactive-dim-fixed = 1.0</code><br><br><code># 指定不透明度规则列表，格式为 `PERCENT:PATTERN`,</code><br><br><code># 像 `50:name *u003d \"Firefox\"`。建议使用 picom-trans。</code><br><br><code># 请注意，我们不保证可能与其他人发生冲突</code><br><br><code># 在框架或客户端窗口上设置“_NET_WM_WINDOW_OPACITY”的程序。</code><br><br><code># example:</code><br><br><code># opacity-rule = [ \"80:class_g = 'URxvt'\" ];</code><br><br><code>#</code><br><br><code>opacity-rule = [</code><br><br><code>\"100:name *= 'Fcitx5'\",</code><br><br><code>\"100:name *= 'xfce4-power-manager'\",</code><br><br><code>\"100:name *= 'Google'\"</code><br><br><code>]</code><br><br><code>#################################</code><br><br><code># Corners #</code><br><br><code>#################################</code><br><br><code># 设置圆角窗口角的半径。当 &gt; 0 时，合成器将</code><br><br><code># 圆窗户的角落。不能很好的互动</code><br><br><code># `transparent-clipping`.</code><br><br><code>corner-radius = 10</code><br><br><code># 排除圆角的条件。</code><br><br><code>rounded-corners-exclude = [</code><br><br><code>\"window_type = 'dock'\",</code><br><br><code>\"window_type = 'desktop'\"</code><br><br><code>];</code><br><br><code>#################################</code><br><br><code># Background-Blurring #</code><br><br><code>#################################</code><br><br><code>experimental-backends = true</code><br><br><code># 背景模糊的参数，请参阅 *BLUR* 部分了解更多信息。</code><br><br><code># blur-background = true;</code><br><br><code># blur-background-frame = true;</code><br><br><code># blur-background-fixed = true;</code><br><br><code># blur-method = \"dual_kawase\";</code><br><br><code># blur-method = \"kernel\";</code><br><br><code># blur-strength = 7;</code><br><br><code># 排除背景模糊的条件。</code><br><br><code># blur-background-exclude = []</code><br><br><code>blur-background-exclude = [</code><br><br><code>\"window_type = 'dock'\",</code><br><br><code>\"window_type = 'desktop'\",</code><br><br><code>\"_GTK_FRAME_EXTENTS@:c\"</code><br><br><code>];</code><br><br><code>#################################</code><br><br><code># General Settings #</code><br><br><code>#################################</code><br><br><code># 守护进程。初始化后分叉到后台。导致某些（编写错误的）驱动程序出现问题。</code><br><br><code># daemon = false</code><br><br><code># 指定要使用的后端：`xrender`、`glx` 或 `xr_glx_hybrid`。</code><br><br><code># `xrender` is the default one.</code><br><br><code>#</code><br><br><code>backend = \"glx\"</code><br><br><code># backend = \"xrender\";</code><br><br><code># 启用/禁用垂直同步。</code><br><br><code># vsync = false</code><br><br><code>vsync = true;</code><br><br><code># 通过 D-Bus 启用远程控制。有关详细信息，请参阅下面的 *D-BUS API* 部分。</code><br><br><code># dbus = false</code><br><br><code># 尝试检测 WM 窗口（一个非覆盖重定向窗口，没有</code><br><br><code># 具有'WM_STATE'的孩子）并将它们标记为活动。</code><br><br><code>#</code><br><br><code># mark-wmwin-focused = false</code><br><br><code>mark-wmwin-focused = true;</code><br><br><code># 标记没有以“WM_STATE”为焦点的子窗口的覆盖重定向窗口。</code><br><br><code># mark-ovredir-focused = false</code><br><br><code>mark-ovredir-focused = true;</code><br><br><code># 尝试检测带有圆角的窗口并且不考虑它们</code><br><br><code># 形状的窗户。不幸的是，准确度不是很高。</code><br><br><code>#</code><br><br><code># detect-rounded-corners = false</code><br><br><code>detect-rounded-corners = true;</code><br><br><code># 在客户端窗口上检测'_NET_WM_WINDOW_OPACITY'，对窗口管理器很有用</code><br><br><code># 不将客户端窗口的“_NET_WM_WINDOW_OPACITY”传递给框架窗口。</code><br><br><code>#</code><br><br><code># detect-client-opacity = false</code><br><br><code>detect-client-opacity = true;</code><br><br><code># 使用 EWMH '_NET_ACTIVE_WINDOW' 来确定当前聚焦的窗口，</code><br><br><code># 而不是听 'FocusIn'/'FocusOut' 事件。可能精度更高，</code><br><br><code># 前提是 WM 支持它。</code><br><br><code>#</code><br><br><code># use-ewmh-active-win = false</code><br><br><code># 如果检测到全屏不透明窗口，则取消重定向所有窗口，</code><br><br><code># 最大化全屏窗口的性能。已知会导致闪烁</code><br><br><code># 当重定向/取消重定向窗口时。</code><br><br><code>#</code><br><br><code># unredir-if-possible = false</code><br><br><code># 取消重定向窗口前的延迟，以毫秒为单位。默认为 0。</code><br><br><code># unredir-if-possible-delay = 0</code><br><br><code># 不应该被视为非重定向屏幕全屏的窗口条件。</code><br><br><code># unredir-if-possible-exclude = []</code><br><br><code># 使用 'WM_TRANSIENT_FOR' 对窗口进行分组，并考虑窗口</code><br><br><code>#在同一组中同时专注。</code><br><br><code>#</code><br><br><code># detect-transient = false</code><br><br><code>detect-transient = true;</code><br><br><code># 使用 'WM_CLIENT_LEADER' 对窗口进行分组，并考虑同一个窗口</code><br><br><code># 小组同时聚焦。这通常意味着来自同一应用程序的窗口</code><br><br><code># 将同时被视为专注或不专注。</code><br><br><code># 如果启用了检测瞬态，'WM_TRANSIENT_FOR' 具有更高的优先级。</code><br><br><code>#</code><br><br><code># detect-client-leader = false</code><br><br><code># 将损坏区域的大小调整为特定数量的像素。</code><br><br><code># 正值放大，负值缩小。</code><br><br><code># 如果值为正，则不会实际绘制那些额外的像素</code><br><br><code># 到屏幕，仅用于模糊计算等。 （由于技术限制，</code><br><br><code># 使用损坏，这些像素仍然会错误地绘制到屏幕上。）</code><br><br><code># 主要用于修复模糊的线路损坏问题，</code><br><br><code># 在这种情况下你应该在这里使用模糊半径值</code><br><br><code># （例如，对于 3x3 内核，您应该使用 `--resize-damage 1`，</code><br><br><code># 使用 5x5 的 `--resize-damage 2`，依此类推）。</code><br><br><code># 可能会也可能不会与 *--glx-no-stencil* 一起使用。收缩功能不正常。</code><br><br><code>#</code><br><br><code># resize-damage = 1</code><br><br><code># 指定应该用反转颜色绘制的窗口的条件列表。</code><br><br><code># 资源占用，并且没有经过很好的测试。</code><br><br><code>#</code><br><br><code># invert-color-include = []</code><br><br><code># GLX 后端：避免使用模板缓冲区，如果您没有模板缓冲区，这很有用。</code><br><br><code># 在渲染透明内容时可能会导致不正确的不透明度（但绝不会</code><br><br><code># 实际上发生了）并且可能不适用于模糊背景。</code><br><br><code># 我的测试显示性能提升了 15%。推荐的。</code><br><br><code>#</code><br><br><code>glx-no-stencil = true;</code><br><br><code># GLX 后端：避免在窗口损坏时重新绑定像素图。</code><br><br><code># 可能可以提高快速窗口内容更改的性能，</code><br><br><code># 但已知会破坏某些驱动程序（LLVMpipe、xf86-video-intel 等）。</code><br><br><code># 如果可行，推荐。</code><br><br><code>#</code><br><br><code># glx-no-rebind-pixmap = false</code><br><br><code># 禁用损坏信息。</code><br><br><code># 这会导致每次重绘整个屏幕，而不是屏幕的一部分</code><br><br><code>#实际上已经改变了。可能会降低性能，但可能会修复一些伪影。</code><br><br><code># 对立的选项是使用伤害</code><br><br><code>#</code><br><br><code># no-use-damage = false</code><br><br><code>use-damage = true;</code><br><br><code># 使用 X Sync fence 来同步客户端的draw call，确保所有draw</code><br><br><code># 调用在 picom 开始绘制之前完成。需要 nvidia 驱动程序</code><br><br><code># 为某些用户使用 GLX 后端。</code><br><br><code>#</code><br><br><code># xrender-sync-fence = false</code><br><br><code># GLX 后端：使用指定的 GLSL 片段着色器来渲染窗口内容。</code><br><br><code># 参见 `compton-default-fshader-win.glsl` 和 `compton-fake-transparency-fshader-win.glsl`</code><br><br><code># 在源代码树中作为示例。</code><br><br><code>#</code><br><br><code># glx-fshader-win = \"\"</code><br><br><code># 强制所有窗口使用混合进行绘制。如果你有用</code><br><br><code># 有一个 glx-fshader-win 可以把不透明的像素变成透明的。</code><br><br><code>#</code><br><br><code># force-win-blend = false</code><br><br><code># 不要使用 EWMH 检测全屏窗口。</code><br><br><code># 恢复为仅根据其大小和坐标检查窗口是否为全屏。</code><br><br><code>#</code><br><br><code># no-ewmh-fullscreen = false</code><br><br><code># 调暗明亮的窗户，使其亮度不超过此设定值。</code><br><br><code># 窗口的亮度是通过平均窗口中的所有像素来估计的，</code><br><br><code># 所以这可能会带来性能损失。</code><br><br><code># 将此设置为 1.0 会禁用此行为。需要禁用 --use-damage。 （默认值：1.0）</code><br><br><code>#</code><br><br><code># max-brightness = 1.0</code><br><br><code># 让透明窗口像非透明窗口一样剪辑其他窗口，</code><br><br><code># 而不是在它们之上混合。</code><br><br><code>#</code><br><br><code># transparent-clipping = false</code><br><br><code># 设置日志级别。可能的值为：</code><br><br><code># \"trace\", \"debug\", \"info\", \"warn\", \"error\"</code><br><br><code># 越来越重要。大小写无关紧要。</code><br><br><code># 如果使用“TRACE”日志级别，最好登录到文件中</code><br><br><code># 使用 *--log-file*，因为它可以生成大量日志。</code><br><br><code>#</code><br><br><code># log-level = \"debug\"</code><br><br><code>log-level = \"warn\";</code><br><br><code># 设置日志文件。</code><br><br><code># 如果 *--log-file* 从未指定，日志将被写入标准错误。</code><br><br><code># 否则，日志将写入给定文件，尽管一些早期的</code><br><br><code># 日志可能仍会写入标准错误。</code><br><br><code># 从配置文件中设置此选项时，建议使用绝对路径。</code><br><br><code>#</code><br><br><code># log-file = \"/path/to/your/log/file\"</code><br><br><code># 显示所有 X 错误（用于调试）</code><br><br><code># show-all-xerrors = false</code><br><br><code># 将进程 ID 写入文件。</code><br><br><code># write-pid-path = \"/path/to/your/log/file\"</code><br><br><code># 窗口类型设置</code><br><br><code>#</code><br><br><code># 'WINDOW_TYPE' 是 EWMH 标准中定义的 15 种窗口类型之一：</code><br><br><code># \"unknown\", \"desktop\", \"dock\", \"toolbar\", \"menu\", \"utility\",</code><br><br><code># \"splash\", \"dialog\", \"normal\", \"dropdown_menu\", \"popup_menu\",</code><br><br><code># \"tooltip\", \"notification\", \"combo\", and \"dnd\".</code><br><br><code>#</code><br><br><code># 以下每个窗口类型选项可用：::</code><br><br><code>#</code><br><br><code># fade, shadow:::</code><br><br><code># Controls window-type-specific shadow and fade settings.</code><br><br><code>#</code><br><br><code># opacity:::</code><br><br><code># Controls default opacity of the window type.</code><br><br><code>#</code><br><br><code># focus:::</code><br><br><code># Controls whether the window of this type is to be always considered focused.</code><br><br><code># (By default, all window types except \"normal\" and \"dialog\" has this on.)</code><br><br><code>#</code><br><br><code># full-shadow:::</code><br><br><code># Controls whether shadow is drawn under the parts of the window that you</code><br><br><code># normally won't be able to see. Useful when the window has parts of it</code><br><br><code># transparent, and you want shadows in those areas.</code><br><br><code>#</code><br><br><code># clip-shadow-above:::</code><br><br><code># Controls wether shadows that would have been drawn above the window should</code><br><br><code># be clipped. Useful for dock windows that should have no shadow painted on top.</code><br><br><code>#</code><br><br><code># redir-ignore:::</code><br><br><code># Controls whether this type of windows should cause screen to become</code><br><br><code># redirected again after been unredirected. If you have unredir-if-possible</code><br><br><code># set, and doesn't want certain window to cause unnecessary screen redirection,</code><br><br><code># you can set this to `true`.</code><br><br><code>#</code><br><br><code>wintypes:</code><br><br><code>{</code><br><br><code>tooltip= { fade= true; shadow = false; opacity = 0.75; focus = true; full-shadow = false; };</code><br><br><code>dock= { shadow= false; clip-shadow-above = true; }</code><br><br><code>dnd= { shadow= false; }</code><br><br><code>popup_menu= { opacity= 0.8; }</code><br><br><code>dropdown_menu= { opacity= 0.8; }</code><br><br><code>};</code></pre>\n<h4>驱动安装</h4>\n<p> </p>\n<p><strong>指纹驱动</strong></p>\n<p> </p>\n<p>安装 fprintd 和 libpam-fprintd 两个驱动程序</p>\n<p><code>sudo apt install fprintd libpam-fprintd</code></p>\n<p> </p>\n<p>开始录入指纹</p>\n<p><code>fprintd-enroll</code></p>\n<p>直到出现 Enroll result: enroll-completed 表示录入成功</p>\n<p> </p>\n<p>验证指纹</p>\n<p><code>fprintd-veriy</code></p>\n<p>直到出现veryify-match即表示通过</p>\n<p> </p>\n<p><strong>开启指纹验证</strong></p>\n<p><code>sudo pam-auth-update</code></p>\n<p>勾选以下内容</p>\n<figure class=\"post__image\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/5/2024-12-15_14-20-lg.webp\" alt=\"\" width=\"664\" height=\"722\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-15_14-20-lg-xs.webp 384w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-15_14-20-lg-sm.webp 600w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-15_14-20-lg-md.webp 768w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-15_14-20-lg-lg.webp 1200w ,https://xyz-hgtc.github.io/media/posts/5/responsive/2024-12-15_14-20-lg-xl.webp 1600w\"><figcaption>勾选需要的内容</figcaption></figure>\n<p>重启后即可指纹登陆（在i3lock和lightdm上使用需要先按下enter键）</p>\n<p> </p>\n<h4>打印机驱动</h4>\n<p> </p>\n<p><strong>安装驱动显示管理程序</strong></p>\n<p><code>sudo apt install system-config-printer</code></p>\n<p><strong>安装必要驱动程序和预设打印机驱动</strong></p>\n<p><code>sudo apt install cups foomatic-db</code></p>\n<p><strong>开启系统服务</strong></p>\n<p><code>sudo systemctl enable cups </code></p>\n<p><code>sudo systemctl start cups</code></p>\n<p> </p>\n<h3>随后就可以在“打印设置”里找自己想要的打印机驱动了。（没有的话可以找其他打印机的驱动进行使用）</h3>\n</figure>\n<p> </p>\n</div>\n</div>\n</div>",
            "image": "https://xyz-hgtc.github.io/media/posts/5/2024-12-14_21-22-lg-2.webp",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "系统探索日志"
            ],
            "date_published": "2024-12-28T09:43:05+08:00",
            "date_modified": "2024-12-28T11:14:22+08:00"
        },
        {
            "id": "https://xyz-hgtc.github.io/huan-jing-bian-liang.html",
            "url": "https://xyz-hgtc.github.io/huan-jing-bian-liang.html",
            "title": "环境变量",
            "summary": "问题描述 使用Fedora的时候需要使用flatpak进行部分应用的扩展，例如QQ和微信，但是我的系统是英文的（单纯电脑显示器分辨率不够，看中文没有手机效果好，干脆换成英文），导致很多flatpak中的中文应用出现字体问题 更改环境变量为中文简体即可 sudo flatpak override --env=LC_ALL=zh_CN.UTF-8",
            "content_html": "<h1 id=\"问题描述\">问题描述</h1>\n<p>使用Fedora的时候需要使用flatpak进行部分应用的扩展，例如QQ和微信，但是我的系统是英文的（单纯电脑显示器分辨率不够，看中文没有手机效果好，干脆换成英文），导致很多flatpak中的中文应用出现字体问题</p><h1 id=\"解决方法\">解决方法</h1>\n<p>更改环境变量为中文简体即可</p><p><code>sudo flatpak override --env=LC_ALL=zh_CN.UTF-8</code></p>",
            "image": "https://xyz-hgtc.github.io/media/posts/4/Screenshot_20241109_233003.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "软件随笔"
            ],
            "date_published": "2024-11-09T23:26:19+08:00",
            "date_modified": "2024-12-28T09:37:30+08:00"
        },
        {
            "id": "https://xyz-hgtc.github.io/linuxsheng-dian-pei-zhi-tlp.html",
            "url": "https://xyz-hgtc.github.io/linuxsheng-dian-pei-zhi-tlp.html",
            "title": "Linux省电配置——TLP",
            "summary": "安装 Debian/Ubuntu： sudo apt install tlp tlp-rdw Fedora/RHEL： sudo dnf install tlp tlp-rdw Arch/Manjaro： sudo pacman -S tlp tlp-rdw 启动tlp程序&hellip;",
            "content_html": "<h2 id=\"安装\">安装</h2>\n<p><strong>Debian/Ubuntu：</strong></p><p><code>sudo apt install tlp tlp-rdw</code></p><p><strong>Fedora/RHEL：</strong></p><p><code>sudo dnf install tlp tlp-rdw</code></p><p><strong>Arch/Manjaro：</strong></p><p><code>sudo pacman -S tlp tlp-rdw</code></p><h2 id=\"配置\">配置</h2>\n<h3 id=\"启动\">启动</h3>\n<p>启动tlp程序</p><p><code>systemctl start tlp</code></p><p><code>systemctl enable tlp</code></p><p>如果安装了tlp-rdw，可以开启网络的节能</p><p><code>systemctl start NetworkManager-dispatcher</code></p><p><code>systemctl enable NetworkManager-dispatcher</code></p><p>这个时候需要禁用一个套接字和服务（冲突）</p><p><code>systemctl mask systemd-rfkill.socket systemd-rfkill.service</code></p><h3 id=\"配置文件\">配置文件</h3>\n<h4 id=\"配置文件位置在etctlpconf，因为版本不同会有配置文件差异，这里不做个人配置文件展示\">配置文件位置在/etc/tlp.conf，因为版本不同会有配置文件差异，这里不做个人配置文件展示</h4>\n",
            "image": "https://xyz-hgtc.github.io/media/posts/3/Ping-Mu-Jie-Tu_20241105_220518.jpg",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "软件随笔"
            ],
            "date_published": "2024-11-05T22:03:20+08:00",
            "date_modified": "2024-12-28T09:37:14+08:00"
        },
        {
            "id": "https://xyz-hgtc.github.io/fedora-41andkde-plasma-622.html",
            "url": "https://xyz-hgtc.github.io/fedora-41andkde-plasma-622.html",
            "title": "Fedora Linux 41 &amp; KDE Plasma 6.2.2",
            "summary": "Fedora Linux 41 Fedora 41这个系统我已经使用了将近4天的时间，加上之前也零零散散用过不少时间，也对这个系统有一定的了解了，下面就来分享一下我的一些见解。 首先从客观的角度来讲，Fedora确实并不算是一个稳定的系统，就在我使用的这一段时间内，系统内核就已经升级了3个，虽然不像Arch Linux那样更新的那么频繁，但是与Ubuntu和Debian相比还是激进了不少，所以在安装完成更新之后可以养成及时清理内核的好习惯，但是最好在此内核使用没什么问题的情况下再进行删除，以系统无法启动而造成数据丢失。 dnf包管理器是我最喜欢的包管理器，经常使用Ubuntu/Debian的人知道apt，但是apt没有办法在卸载一个软件包的时候（输入：sudo apt remove xxxxx的时候）同时卸载它的所有依赖包。 Arch的pacman和Manjaro的pamac相对来说会好很多，但是pacman提供的选项太宽泛了——pacman -R是直接卸载软件包和依赖项，但是如果是想要卸载单个软件包就需要用pacman -Rs了。pamac是Manjaro的包管理器，相比pacman的更新节奏会更稳定一些，但是不管是什么Arch的发行版想要使用国内的软件，例如QQ，微信，WPS，QQ音乐等等软件都离不开yay，一个go语言写的包管理器，这样下来包管理器就有3个，使用起来其实还是很不方便的。 dnf就不一样，这个包管理器十分方便——debian在更新的时候需要输入两个命令才可以更新（sudo apt update和sudo apt upgrade），但是dnf只需要sudo dnf&hellip;",
            "content_html": "<h1>Fedora Linux 41</h1>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/2/Guan-Yu-Xi-Tong-2.avif\" alt=\"\" width=\"1062\" height=\"809\"></figure>\n<p>Fedora 41这个系统我已经使用了将近4天的时间，加上之前也零零散散用过不少时间，也对这个系统有一定的了解了，下面就来分享一下我的一些见解。</p>\n<p>首先从客观的角度来讲，Fedora确实并不算是一个稳定的系统，就在我使用的这一段时间内，系统内核就已经升级了3个，虽然不像Arch Linux那样更新的那么频繁，但是与Ubuntu和Debian相比还是激进了不少，所以在安装完成更新之后可以养成及时清理内核的好习惯，但是最好在此内核使用没什么问题的情况下再进行删除，以系统无法启动而造成数据丢失。</p>\n<p>dnf包管理器是我最喜欢的包管理器，经常使用Ubuntu/Debian的人知道apt，但是apt没有办法在卸载一个软件包的时候（输入：sudo apt remove xxxxx的时候）同时卸载它的所有依赖包。</p>\n<p>Arch的pacman和Manjaro的pamac相对来说会好很多，但是pacman提供的选项太宽泛了——pacman -R是直接卸载软件包和依赖项，但是如果是想要卸载单个软件包就需要用pacman -Rs了。pamac是Manjaro的包管理器，相比pacman的更新节奏会更稳定一些，但是不管是什么Arch的发行版想要使用国内的软件，例如QQ，微信，WPS，QQ音乐等等软件都离不开yay，一个go语言写的包管理器，这样下来包管理器就有3个，使用起来其实还是很不方便的。</p>\n<p>dnf就不一样，这个包管理器十分方便——debian在更新的时候需要输入两个命令才可以更新（sudo apt update和sudo apt upgrade），但是dnf只需要sudo dnf update就可以了。如果需要使用国内的应用，直接安装flatpak就可以了，这还只是一个沙盒而已，十分方便。</p>\n<p> </p>\n<h1>KDE Plasma 6.2.2</h1>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/2/Zhuo-Mian-Jie-Tu.avif\" alt=\"\" width=\"1924\" height=\"1080\"></figure>\n<p>这是我的KDE桌面环境。当然，这肯定不是默认的了。</p>\n<p>编辑桌面还是非常有说的，先看下图的编辑画面：</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://xyz-hgtc.github.io/media/posts/2/Bian-Ji-Zhuo-Mian.avif\" alt=\"\" width=\"1916\" height=\"1080\"></figure>\n<p>这个编辑画面还是非常适合普通大众进行使用的，整体更改面板位置的设置更加简洁，重点的设置突出，归类也更佳明确。</p>\n<p><strong>如果有笔记本电脑的分辨率像我一样还没到1080P的，那确实可以试试KDE，绝对不会失望的，图形的协调性方面比Gnome好了不知道多少倍</strong></p>",
            "image": "https://xyz-hgtc.github.io/media/posts/2/KDEandFedora.jpg",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "系统探索日志"
            ],
            "date_published": "2024-11-04T20:28:41+08:00",
            "date_modified": "2024-11-04T21:40:34+08:00"
        },
        {
            "id": "https://xyz-hgtc.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html",
            "url": "https://xyz-hgtc.github.io/gao-zhong-xiao-gao-kao-pythonfu-xi-ti-gang.html",
            "title": "高中小高考Python复习提纲",
            "summary": "一、Python的运行和控制 程序运行逻辑 在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。 示例程序： def output(): print(&quot;Hello&quot;) return output() 执行结果： Hello 程序分析： def为用户定义函数。Python模糊主函数概念，用户定义函数在定义之后才可引用。 示例程序 print(&quot;Hello&quot;) 执行结果： Hello 程序分析 print，打印函数，用于输出字符，数据变量等信息 弱化int，char等变量&hellip;",
            "content_html": "<h1 id=\"一、python的运行和控制\">一、Python的运行和控制</h1>\n<h2 id=\"程序运行逻辑\">程序运行逻辑</h2>\n<p>在Python中没有函数的层级关系，例如主函数和其他函数等关系（主函数与用户定义函数之间的关系）。</p><hr>\n<p><em><strong>示例程序</strong></em>：</p><pre><code class=\"language-python\">def output():\n    print(&quot;Hello&quot;)\n    return\n\noutput()\n</code></pre>\n<p>执行结果：</p><pre><code class=\"language-python\">Hello\n</code></pre>\n<hr>\n<p><em><strong>程序分析</strong></em>：</p><p><strong>def为用户定义函数</strong>。<strong>Python模糊主函数概念</strong>，用户定义函数在定义之后才可引用。</p><h2 id=\"输出hello-worldprint函数\">输出Hello World——Print函数</h2>\n<p><em><strong>示例程序</strong></em></p><pre><code class=\"language-python\">print(&quot;Hello&quot;)\n</code></pre>\n<p>执行结果：</p><pre><code class=\"language-python\">Hello\n</code></pre>\n<hr>\n<p><em><strong>程序分析</strong></em></p><p><strong>print</strong>，打印函数，用于输出字符，数据变量等信息  <em>弱化int，char等变量</em></p><hr>\n<p><strong>Print函数语法格式</strong></p><p>输出规定字符，文字等内容</p><pre><code class=\"language-python\">print(&quot;Hello&quot;)\nprint(&quot;12345&quot;)\nprint(&quot;你好&quot;)\n</code></pre>\n<p>输出变量值等内容</p><pre><code class=\"language-python\">x = 10\nprint(x)\n</code></pre>\n<p><strong>混合一下</strong>（输出输入的值——input函数）</p><pre><code class=\"language-python\">x = input(&quot;Please input a number&quot;)\nprint(&quot;Your input number is&quot;,x)\n</code></pre>\n<hr>\n<h2 id=\"输入字符，数字等input函数\">输入字符，数字等——input函数</h2>\n<p><em><strong>示例程序</strong></em></p><pre><code class=\"language-python\">x = input(&quot;Please input&quot;)\nprint(&quot;Your input is&quot;,x)\n</code></pre>\n<p><em><strong>程序分析</strong></em></p><ol>\n<li>程序运行逻辑是本身为主函数（Python中不强调主函数概念——既可以面向对象又可以面向过程）</li>\n<li>无需分析输入的数值类型（Python中弱化int char等概念）</li>\n</ol>\n<hr>\n<h2 id=\"判断语句ifelse\">判断语句——if……else……</h2>\n<p><em><strong>示例程序</strong></em></p><p><strong>标准语句</strong></p><pre><code class=\"language-python\">x = int（input(&quot;Please input a number&quot;)）\nif x == 1:\n    print(&quot;You are right&quot;)\nelse:\n    print(&quot;Maybe there is something Wrong&quot;)\n</code></pre>\n<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><strong>添加elif</strong></p><pre><code class=\"language-python\">x = int（input(&quot;Please input a number&quot;)）\nif x == 1:\n    print(&quot;You are right&quot;)\nelif x == 2:\n    print(&quot;Maybe you are right&quot;)\nelse:\n    print(&quot;Maybe there is something Wrong&quot;)\n</code></pre>\n<p>执行结果</p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：输出 Maybe there is something wrong</code></p><p><code>输入2：输出 Maybe you are right</code></p><p><em><strong>程序解读</strong></em></p><p>程序的运行方式</p><ul>\n<li>满足if的条件，执行下方内容</li>\n<li>不满足if,但是满足elif,执行elif，执行elif下方语句</li>\n<li>不满足，执行else下方内容</li>\n</ul>\n<p><em><strong>语句语法格式</strong></em></p><pre><code class=\"language-python\">if 判断条件:\n    执行内容\nelif 判断条件:\n    执行内容\nelse:\n    执行内容\n</code></pre>\n<hr>\n<h2 id=\"重复执行语句while\">重复执行语句——while……</h2>\n<p><em><strong>示例程序</strong></em></p><pre><code class=\"language-python\">x = 0\n\nwhile x != 1:\n    x = input(&quot;input a number&quot;)\n    print(x)\n\nprint(&quot;right&quot;)\n</code></pre>\n<p><em><strong>程序解读</strong></em></p><p><code>输入1：输出 You are right </code></p><p><code>输入非1的内容：重新输入</code></p><p><em><strong>语句语法格式</strong></em></p><pre><code class=\"language-python\">while 判断条件(一般为相反):\n    执行内容\n</code></pre>\n<h2 id=\"for循环\">for循环</h2>\n<p><em><strong>示例程序</strong></em></p><pre><code class=\"language-python\">for i in range(10):\n    print(i)\n</code></pre>\n<p><em><strong>程序解读</strong></em>\n<code>输出0-9</code>\n当使用for循环时，需要使用range函数，range函数的作用是生成一个数字序列，例如range(10)生成一个0-9的数字序列。<strong>用于代替while函数进行重复性质的循环</strong></p><p><em><strong>语句语法格式</strong></em></p><pre><code class=\"language-python\">for 变量 in range(重复执行次数):\n    执行内容\n</code></pre>\n<p><strong>提升</strong>\n类似do……while……</p><pre><code class=\"language-python\">secret_word = &quot;python&quot;\ncounter = 0\n\nwhile True:\n    word = input(&quot;Enter the secret word: &quot;).lower()\n    counter = counter + 1\n    if word == secret_word:\n        break\n    if word != secret_word and counter &gt; 7: \n        break\n</code></pre>\n<h1 id=\"二、数据类型\">二、数据类型</h1>\n<h2 id=\"分类\">分类</h2>\n<ul>\n<li>数字类型：整型 int，单精度浮点型 float，双精度浮点型 double</li>\n<li>字符串类型：字符串 str</li>\n</ul>\n<h2 id=\"数据类型转换\">数据类型转换</h2>\n<h3 id=\"案例\">案例</h3>\n<pre><code class=\"language-python\">x = int(input(&quot;Please input a number&quot;))\nprint(x)\n</code></pre>\n<p><strong>案例解释</strong></p><ul>\n<li>输入一个数字，<code>input()</code>函数使用的是字符型，进行比较需将其转换为整型</li>\n<li>输出整型数字</li>\n<li>字符型整形化<code>int(字符型变量)</code></li>\n</ul>\n",
            "image": "https://xyz-hgtc.github.io/media/posts/1/OIP-C.jpeg",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "学习笔记"
            ],
            "date_published": "2024-11-03T20:48:51+08:00",
            "date_modified": "2024-11-11T17:41:31+08:00"
        }
    ]
}
